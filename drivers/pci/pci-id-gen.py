#!/usr/bin/python3

num_vendors = 0
num_devices = 0

output = '''
// generated by pci-id-gen.py

#include <drivers/pci/pci.h>
#include <cdefs.h>

__section(".rodata") const struct pci_vendor_id pci_id_lookup_table[] = {
'''

def end_vendor():
    global num_vendors, num_devices, output
    if num_vendors > 0:
        output += f'''    }},
    .num_device_ids = {num_devices}
}},
''' 

def next_vendor(vendor):
    global num_vendors, num_devices, output
    end_vendor()

    num_vendors += 1
    num_devices = 0
    
    current_vendor = vendor.split('  ')
    current_vendor[1] = current_vendor[1].replace('"', '\\"')
     
    output += f'''{{
    .vendor_id = 0x{current_vendor[0]},
    .vendor = "{current_vendor[1]}",
    .device_ids = (struct pci_device_id[]){{
'''
    
def next_device(device):
    global num_devices, output
    device = device.split('  ')
    device[1] = device[1].replace('"', '\\"')
    output += f'''        {{
            .device_id = 0x{device[0]},
            .device = "{device[1]}"
        }},
'''
    num_devices += 1

with open("pci.ids", "r") as f:
    for line in f:
        line = line.rstrip()
        if len(line) == 0 or line[0] in ['#', 'C']:
            continue

        fields = line.split('\t')
        if len(fields) == 1:
            next_vendor(fields[0])
        elif len(fields) == 2:
            next_device(fields[1])

end_vendor()
output += f'''}};
const size_t pci_id_lookup_table_size = {num_vendors};
'''

print(output)
