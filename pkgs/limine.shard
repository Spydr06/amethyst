{ lib, pkgs, ... }:
lib.mkPackage rec {
    name = "limine";
    version = "7.4.1";

    config = {
        boot.loader.platform = {
            efi = true;
            bios = true;
        };
    };

    sourceDir = "./limine-${version}";

    limineBin = "${sourceDir}/limine";

    limineLoaders = 
        (builtins.when config.boot.loader.platform.bios [ "limine-bios.sys" "limine-bios-cd.bin" ]) ++
        (builtins.when config.boot.loader.platform.efi "limine-uefi-cd.bin");

    biosInstaller = iso: lib.runPrecompiled [ (sourceDir + limineBin) "bios-install" iso ];

    bootX64Efi = "BOOTX64.EFI";
    bootIA32Efi = "BOOTIA32.EFI";

    fetchPhase = let
            url = "https://github.com/limine-bootloader/limine/releases/download/v${version}/${sourceDir}.tar.gz";
        in builtins.toString $ lib.fetchTarball url;

    configurePhase = geode.proc.spawn "${sourceDir}/configure" [
            "--prefix" (builtins.toString geode.prefix) 
            "--enable-bios-cd" "--enable-bios" "--enable-uefi-x86-64" "--enable-uefi-cd"
        ] true;

    buildPhase = lib.make ["all"];

    installPhase = lib.make ["install"];

    /*hooks = {
        postMkIso = iso: with builtins; 
        let
            installer = biosInstaller iso;
        in if config.boot.loader.platform.bios 
            then geode.proc.spawn (head installer) (tail installer) true
            else null;
    };*/
}

