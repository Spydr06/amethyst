{ lib, pkgs, ... }:
lib.mkPackage rec {
    name = "libshard";
    version = "0.0.1";

    sourceDir = "shard";
    makeTarget = "lib";
    installTarget = "install-lib";

    dependencies = with pkgs; [ libc ];

    build = util.shell.make ["-C" sourceDir makeTarget
        ("CFLAGS=-specs=" + $ builtins.toString util.paths.gcc_specs)
        ("PREFIX=" + $ builtins.toString util.paths.prefix)
    ];

    install = util.shell.make ["-C" sourceDir installTarget
        ("PREFIX=" + $ builtins.toString util.paths.prefix)
    ];
};
/*lib.mkCollection {

    shard-sh = lib.mkPackage rec {
        name = "shard-sh";
        version = "0.0.1";

        sourceDir = libshard.sourceDir;
        makeTarget = "shell";
        installTarget = "install-shell";

        dependencies = with pkgs; [ libshard getopt ];

        build = let 
                prefix = builtins.toString util.paths.prefix;
            in util.shell.make ["-C" sourceDir makeTarget
            ("CFLAGS=-DSHARD_SHELL_VERSION=\"\\\"" + version + "\\\"\" -specs=" + $ builtins.toString util.paths.gcc_specs)
            ("LDFLAGS=-lgetopt")
            ("PREFIX=" + prefix)
        ];

        install = util.shell.make ["-C" sourceDir installTarget
            ("PREFIX=" + $ builtins.toString util.paths.prefix)
        ];
    };

    shard = lib.mkPackage rec {
        name = "shard";
        version = "0.0.1";

        config = {
            ffi.enabled = true;
            repl.enabled = true;
        };

        sourceDir = libshard.sourceDir;
        makeTarget = "bin";
        installTarget = "install-bin";

        dependencies = with pkgs; [ libshard ];

        build = let
                prefix = builtins.toString util.paths.prefix;
            in util.shell.make ["-C" sourceDir makeTarget
            ("CFLAGS=-specs=${builtins.toString util.paths.gcc_specs}" 
                + (if config.ffi.enabled then "" else " -D_SHARD_NO_FFI")
                + (if config.repl.enabled then "" else " -D_SHARD_NO_REPL")
            )
            ("LDFLAGS=-lgetopt")
            ("PREFIX=" + prefix)
        ];

        install = util.shell.make ["-C" sourceDir installTarget
            ("PREFIX=" + $ builtins.toString util.paths.prefix)
        ];
    };

    shard-full = lib.mkPackage rec {
        name = "shard-full";
        version = "0.0.1";
        meta = true;

        dependencies = with pkgs; [ libshard shard-sh ];
    };
}
*/
