{ lib, pkgs, stdenv, ... }:
let
    configFile = "limine.cfg";

    timeout = 5;

    bootDir = /boot;

    mkLimineConfig = { timeout, entries }: builtins.join "\n" $ [
            "# autogenerated by limine-config.shard"
            "TIMEOUT=${timeout}"
            ""
        ] ++ $ builtins.map mkLimineEntry entries;

    mkLimineEntry = { kernel, protocol ? "limine", initrd ? null, cmdline ? "" }:
        builtins.join "\n" $ [
            ":${kernel}"
            "  PROTOCOL=${protocol}"
            "  KERNEL_PATH=boot://${bootDir}/${kernel}"
            "  KERNEL_CMDLINE=${cmdline}"
        ] ++ 
            $ builtins.when (initrd != null) "  MODULE_PATH=boot://${bootDir}/${initrd}";


    readConfigFromBoot = let
            bootDirFile = f: "${lib.prefix}/${bootDir}/${f}";

            initrdFile = kernel: "${stdenv.stripFileExt kernel}.initrd";

            bootEntry = kernel: let
                    initrd = "${stdenv.stripFileExt kernel}.initrd";
                    hasInitrd = stdenv.fileExists $ bootDirFile $ initrd;

                    cmdlineFile = bootDirFile "${stdenv.stripFileExt kernel}-cmdline.txt";
                    hasCmdlineFile = stdenv.fileExists $ cmdlineFile;
                in {
                    inherit kernel;
                    initrd = if hasInitrd then initrd else null;
                    cmdline = if hasCmdlineFile then builtins.trim $ stdenv.readFile cmdlineFile else "";
                };

            isKernelImage = name: type: type == "regular" && stdenv.hasFileExt "elf" $ bootDirFile name;

            bootEntries = builtins.map bootEntry $
                builtins.attrNames $
                builtins.filterAttrs isKernelImage $ stdenv.readDir "${lib.prefix}/${bootDir}";
        in 
            { inherit timeout; entries = bootEntries; };

in lib.mkPackage {
    name = "limine-config";
    version = "0.0.1"; 

    buildPhase = stdenv.writeFile configFile $ geode.debug.dump $ mkLimineConfig readConfigFromBoot;

    installPhase = lib.installFile { src = configFile; dst = "${bootDir}/limine/${configFile}"; };
}
