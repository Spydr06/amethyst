with import ./geode.shard; 
config: let
    bootstrapPkg = pkg: builtins.seqList $ manager.installPipeline config pkg;

    bootstrapPkgs = pkgList: builtins.map bootstrapPkg pkgList;

    createInitrd = initrd: builtins.seqList [
        (util.io.logMajor ("Creating initrd " + (builtins.toString initrd.path) + "...") null)
        (geode.proc.spawn "tar"
            ([
                ("--format=" + initrd.compression)
                "-cf"
                (builtins.toString $ util.paths.prefix + initrd.path)
                "--no-recursion" "-C"
                (builtins.toString geode.prefix)
            ] ++ (util.dirEnts geode.prefix))
            true
        )
    ];

    createIso = file: builtins.seqList [
        (util.io.logMajor ("Creating Image " + file + "...") null)
        (util.shell.xorriso [
            # TODO: make bootloader-generic
            "-as" "mkisofs" "-b" "boot/limine/limine-bios-cd.bin"
            "-no-emul-boot" "-boot-load-size" 4 "-boot-info-table"
            (util.paths.prefix) "-o" file            
        ])
        (geode.proc.spawn "limine/limine" ["bios-install" file] true)
    ];
in 
    builtins.seqList [
        (bootstrapPkgs config.environment.packages)
        (builtins.when config.boot.initrd.enabled $ createInitrd config.boot.initrd)
        (createIso "amethyst.iso")
    ]

