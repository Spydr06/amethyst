with import ./../geode.shard; {
    limine = lib.mkPackage rec {
        name = "limine";
        
        config = {
            boot.loader.platform = {
                efi = true;
                bios = true;
            };
        };

        limineDir = builtins.toPath "./limine";

        limineBin = "limine";

        limineLoaders = 
            (builtins.when config.boot.loader.platform.bios [ "limine-bios.sys" "limine-bios-cd.bin" ]) ++
            (builtins.when config.boot.loader.platform.efi "limine-uefi-cd.bin");

        biosInstaller = iso: if (geode.getenv "NIXOS_HOST") == null
            then [ (limineDir + limineBin) "bios-install" iso ]
            else [ "steam-run" (limineDir + liminebin) "bios-install" iso ];

        bootX64Efi = "BOOTX64.EFI";
        bootIA32Efi = "BOOTIA32.EFI";

        check = util.ensureExists { path = limineDir; };

        install = util.installFiles (
            (builtins.map (loader: {
                src = limineDir + loader;
                dst = /boot/limine + loader;
            }) limineLoaders) ++
            (builtins.when config.boot.loader.platform.efi [
                { src = limineDir + bootX64Efi; dst = /EFI/BOOT + bootX64Efi; }
                { src = limineDir + bootIA32Efi; dst = /EFI/BOOT + bootIA32Efi; }
            ])
        );

        hooks = {
            postMkIso = iso: with builtins; 
            let
                installer = biosInstaller "foo";
            in if config.boot.loader.platform.bios 
                then geode.proc.spawn (head installer) (tail installer) true
                else null;
        };
    };
}

